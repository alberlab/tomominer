#!/usr/bin/env python

import os
import sys
import time
import threading
import Queue
import logging
import logging.handlers

from tomominer.parallel import Server

if __name__ == '__main__':

    #Run a server locally.

    import sys
    import argparse

    parser = argparse.ArgumentParser(description="Run the TomoMiner server.")

    parser.add_argument( '--host', default="0.0.0.0", type=str, help="Address to serve on (default 0.0.0.0)")
    parser.add_argument('-p', '--port', default=5011, type=int, help="Port (default 5011)")
    parser.add_argument('-v', '--verbose', default=0, action="count", help="set verbosity")
    parser.add_argument('-i', '--timeout-thread-interval', default=30, type=int, help="Set the frequency with which the timeout thread polls for tasks to kill (default 30)")
    parser.add_argument('-t', '--get-task-timeout', default=30, type=int, help="Wait time before get_task() returns None if no tasks are available")

    args = parser.parse_args()

    # TODO: handle parsed args and pass into server.

    logging.basicConfig(level=max(3 - args.verbose, 0) * 10,
                        format='%(asctime)-15s %(name)-10s %(thread)-10s %(levelname)-8s %(message)s')

    server = Server((args.host, args.port), )

    try:
        server.serve_forever()
    except KeyboardInterrupt:
        print "Caught ctrl-c, exiting."
        server.server_close()
